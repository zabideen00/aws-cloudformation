AWSTemplateFormatVersion: 2010-09-09
Description: Creating an EC2 instance

Mappings:
  RegionMap:
    us-east-1:
      "ubuntu": "ami-052efd3df9dad4825"
      "linux2ami": "ami-0cff7528ff583bf9a"
    us-east-2:
      "ubuntu": "ami-02f3416038bdb17fb"
      "linux2ami": "ami-02d1e544b84bf7502"
    us-west-1:
      "ubuntu": "ami-085284d24fe829cd0"
      "linux2ami": "ami-0d9858aa3c6322f73"
    us-west-2:
      "ubuntu": "ami-0d70546e43a941d70"
      "linux2ami": "ami-098e42ae54c764c35"

  EnvironmentMap:
    dev:
      "instancetype": "t2.nano"
    uat:
      "instancetype": "t2.micro"
    prod:
      "instancetype": "t2.micro"

Parameters:

  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cloudformation/vpc/environment
    Description: Select environment from parameter store
  SshKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: select the ssh key for template

Resources:

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", linux2ami]
      InstanceType: !FindInMap [EnvironmentMap, !Ref Environment, instancetype]
      KeyName: !Ref SshKey
      SecurityGroupIds:
        - !ImportValue
          'Fn::Sub': '${Environment}-asg-sg'
      SubnetId: !ImportValue
        'Fn::Sub': '${Environment}-public-a'
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r Ec2Instance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource SampleWaitCondition --region ${AWS::Region}
    Metadata:
      Comment: Install apache server
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content: |
                <h1>Hellow World!!!</h1>
              mode: '000644'
          commands:
            hello:
              command: "echo 'hello World!!!'"
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
  SampleWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT2M
